import requests
from requests.auth import HTTPBasicAuth
import json

urlUpsource = 'url'
loginUpsource = 'login'
passUpsource = 'pass'
projectName = 'name'

auth = HTTPBasicAuth(loginUpsource, passUpsource)
headers = {'Content-type': 'application/json','Content-Encoding': 'utf-8'}

#Returns the list of revisions in a given project 
def revisionList():
    url = urlUpsource + '~rpc/getRevisionsList'
    data = {"projectId":projectName, "limit":50}
    answer = requests.post(url, headers=headers, data=json.dumps(data), auth=auth)
    response = answer.json()
    readble_json = response['result']['revision']
    return readble_json

#Returns the list of branches a revision is part of
def revisionBranche(revisionId):
    url = urlUpsource + '~rpc/getRevisionBranches'
    data = {"projectId":projectName, "revisionId":revisionId}
    answer = requests.post(url, headers=headers, data=json.dumps(data), auth=auth)
    response = answer.json()
    readble_json = response['result']['branchName']
    return readble_json
    
#Returns short review information for a set of revisions
def reviewInfo():
    for revisionId in revisionList():    
        url = urlUpsource + '~rpc/getRevisionReviewInfo'
        data = {"projectId":projectName, "revisionId":revisionId['revisionId']}
        answer = requests.post(url, headers=headers, data=json.dumps(data), auth=auth)
        response = answer.json()
        readble_json = response['result']['reviewInfo']
        for j in readble_json:
            for k in j:
                k = j
                issueTitle = k['reviewInfo']['title']
                issueStart = issueTitle.find('')
                issueEnd = issueTitle.find(' ', issueStart)
                issue = issueTitle[issueStart:issueEnd], k['reviewInfo']['state']
                print(issue, revisionBranche(revisionId['revisionId']))
    
def main():
    reviewInfo()

if __name__ == '__main__':
    main()
